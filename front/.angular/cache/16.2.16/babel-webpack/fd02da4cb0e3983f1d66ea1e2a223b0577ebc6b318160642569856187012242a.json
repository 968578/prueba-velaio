{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let FormTaskComponent = class FormTaskComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.sumittedTask = false;\n    // se crea el formulario de las tareas\n    this.taskForm = this.fb.group({\n      taskName: [\"\", Validators.required],\n      date: [\"\", Validators.required],\n      users: this.fb.array([{\n        username: [\"Omar\"],\n        age: [\"25\"],\n        skills: [\"Java\", \"React\"]\n      }])\n    });\n    // se crea el formulario de los usuarios\n    this.userForm = this.fb.group({\n      username: [\"\", Validators.required],\n      age: [\"\", Validators.required],\n      skills: this.fb.array([this.fb.control(\"Java\"), this.fb.control(\"Angular\"), this.fb.control(\"Mysql\"), this.fb.control(\"AWS\")])\n    });\n  }\n  get fTask() {\n    return this.taskForm.controls;\n  }\n  get fUsers() {\n    return this.taskForm.controls[\"users\"];\n  }\n  submitTask() {\n    this.sumittedTask = true;\n    console.log(\"this.taskForm.value->\");\n    if (!this.taskForm.valid) {\n      console.log(\"invalido\");\n      return;\n    }\n    console.log(this.taskForm.valid);\n    console.log(this.taskForm.value);\n    console.log(this.taskForm);\n  }\n  // agrega el usuario a la tarea\n  addUser() {\n    if (!this.userForm.valid) {\n      return;\n    }\n    const dataUser = this.userForm.value;\n    const formGroupUser = this.fb.group({\n      username: [dataUser.username],\n      age: [dataUser.age],\n      skills: [dataUser.skills]\n    });\n    this.fUsers.push(formGroupUser);\n    this.clearUserForm();\n  }\n  deleteUser(index) {\n    this.fUsers.removeAt(index);\n  }\n  // limpia el formulario del usuario\n  clearUserForm() {\n    // clear the form.\n    for (let key in this.userForm.controls) {\n      if (key == \"skills\") {\n        this.fSkills.clear();\n      } else {\n        this.userForm.controls[key].setValue(\"\");\n      }\n    }\n  }\n  // obtiene el formArray de skills\n  get fSkills() {\n    return this.userForm.controls[\"skills\"];\n  }\n  // agrega una habilidad al usuario \n  addSkill() {\n    const skill = this.skillInp.nativeElement.value;\n    if (!skill) {\n      return;\n    }\n    const controlSkill = this.fb.control(skill);\n    this.fSkills.push(controlSkill);\n    this.skillInp.nativeElement.value = \"\";\n  }\n  // Elimina una habilidad\n  deleteSkill(index) {\n    this.fSkills.removeAt(index);\n  }\n  json(data) {\n    return JSON.stringify(data);\n  }\n};\n__decorate([ViewChild('skill')], FormTaskComponent.prototype, \"skillInp\", void 0);\nFormTaskComponent = __decorate([Component({\n  selector: 'form-task-c',\n  templateUrl: './form-task.component.html',\n  styleUrls: ['./form-task.component.css']\n})], FormTaskComponent);","map":{"version":3,"names":["Component","ViewChild","Validators","FormTaskComponent","constructor","fb","sumittedTask","taskForm","group","taskName","required","date","users","array","username","age","skills","userForm","control","fTask","controls","fUsers","submitTask","console","log","valid","value","addUser","dataUser","formGroupUser","push","clearUserForm","deleteUser","index","removeAt","key","fSkills","clear","setValue","addSkill","skill","skillInp","nativeElement","controlSkill","deleteSkill","json","data","JSON","stringify","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\omare\\Documents\\Programacion\\prueba-velaio\\front\\src\\app\\components\\form-task\\form-task.component.ts"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'form-task-c',\n  templateUrl: './form-task.component.html',\n  styleUrls: ['./form-task.component.css'],\n})\nexport class FormTaskComponent {\n\n  taskForm: FormGroup;\n  userForm: FormGroup;\n  @ViewChild('skill') skillInp!: ElementRef;\n  sumittedTask: boolean = false;\n\n\n  constructor(\n    private fb: FormBuilder\n  ) {\n    // se crea el formulario de las tareas\n    this.taskForm = this.fb.group({\n      taskName: [\"\", Validators.required],\n      date: [\"\", Validators.required],\n      users: this.fb.array([{\n        username: [\"Omar\"],\n        age: [\"25\"],\n        skills: [\"Java\", \"React\"],\n      }]),\n    });\n\n    // se crea el formulario de los usuarios\n    this.userForm = this.fb.group({\n      username: [\"\", Validators.required],\n      age: [\"\", Validators.required],\n      skills: this.fb.array([\n        this.fb.control(\"Java\"),\n        this.fb.control(\"Angular\"),\n        this.fb.control(\"Mysql\"),\n        this.fb.control(\"AWS\"),\n      ]),\n    });\n\n  }\n\n  get fTask(){\n    return this.taskForm.controls\n  }\n\n  get fUsers() {\n    return this.taskForm.controls[\"users\"] as FormArray;\n  }\n\n  submitTask() {\n    this.sumittedTask= true;\n    console.log(\"this.taskForm.value->\")\n    if (!this.taskForm.valid) {\n      console.log(\"invalido\")\n      return\n    }\n    console.log(this.taskForm.valid)\n    console.log(this.taskForm.value)\n    console.log(this.taskForm)\n  }\n\n\n  // agrega el usuario a la tarea\n  addUser() {\n    if (!this.userForm.valid) {\n      return\n    }\n\n    const dataUser = this.userForm.value;\n\n    const formGroupUser = this.fb.group({\n      username: [dataUser.username],\n      age: [dataUser.age],\n      skills: [dataUser.skills]\n    });\n\n    this.fUsers.push(formGroupUser);\n    this.clearUserForm();\n  }\n\n  deleteUser(index: number) {\n    this.fUsers.removeAt(index)\n  }\n\n  // limpia el formulario del usuario\n  clearUserForm() {\n    // clear the form.\n    for (let key in this.userForm.controls) {\n      if (key == \"skills\") {\n        this.fSkills.clear();\n      } else {\n        this.userForm.controls[key].setValue(\"\");\n      }\n    }\n  }\n\n  // obtiene el formArray de skills\n  get fSkills() {\n    return this.userForm.controls[\"skills\"] as FormArray\n  }\n\n  // agrega una habilidad al usuario \n  addSkill() {\n    const skill = this.skillInp.nativeElement.value;\n    if (!skill) {\n      return\n    }\n    const controlSkill = this.fb.control(skill);\n    this.fSkills.push(controlSkill);\n    this.skillInp.nativeElement.value = \"\";\n  }\n\n  // Elimina una habilidad\n  deleteSkill(index: number) {\n    this.fSkills.removeAt(index);\n  }\n\n  json(data: any) {\n    return JSON.stringify(data)\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}